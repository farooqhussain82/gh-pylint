name: "PyLint with Customizable fail score and dynamic badge"
description: "Perform pylint check on one or multiple packages and update badge in README.md"
branding:
  icon: eye
  color: green
inputs:
  package-path:
    description: "The path, relative to the root of the repo, of the package(s) to lint"
    required: true
  python-version:
    description: "Python version which will install all dependencies and lint package(s)"
    required: true
  requirements-path:
    description: "The path, relative to the root of the repo, of the requirements to install"
    default: requirements.txt
    required: false
  readme-path:
    description: "The path, relative to the root of the repo, of the README.md to update with the pylint badge"
    default: README.md
    required: false
  fail-below:
    description: "Score below which Linting should fail"
    default: 5
    required: false
  ignore-error-codes:
    description: "Comma-separated list of Pylint error codes to ignore"
    default: "E0401,E1101"
    required: false

runs:
  using: "composite"

  steps:

    - name: "Checkout Repository - PR"
      uses: actions/checkout@v3
      if: github.event_name == 'pull_request'
      with:
        ref: ${{ github.event.pull_request.head.ref }}
  
    - name: "Checkout Repository - PUSH"
      uses: actions/checkout@v3
      if: github.event_name != 'pull_request'

    - name: "Setup python"
      uses: actions/setup-python@v4
      with:
        python-version: ${{ inputs.python-version }}
  
    - name: "Setup installation requirements"
      run: |
        pip install --upgrade pip
        pip install wheel pylint
        pip install -r ${{ inputs.requirements-path }}
      shell: bash

    - name: "Lint package(s)"
      run: |
        pkgs_pth=$(python3 -c 'import re; print(" ".join(re.findall("([^\s]+)", ${{ toJSON(inputs.package-path) }})))')
        pylint --disable=${{ inputs.ignore-error-codes }} --exit-zero --output-format=text:pylint_score.txt,colorized $pkgs_pth
      shell: bash

    - name: "Create badge and substitute it in README.md"
      id: score
      run: |
        python ${{ github.action_path }}/score.py \
        ${{ inputs.fail-below }} \
        ${{ inputs.readme-path }}
      shell: bash

    - name: "Push README with changed badge to origin"
      uses: EndBug/add-and-commit@v9
      with:
        add: 'README.md'
        default_author: github_actions
        message: 'Updated pylint badge'
        push: 'true'

    - name: "Job success decision"
      run: exit ${{steps.score.outputs.exit_code}}
      shell: bash
